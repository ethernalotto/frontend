import {useEffect, useState} from 'react';
import {useWeb3React} from '@web3-react/core';

import {Col, Form, Row} from 'react-bootstrap';

import {ConnectButton} from './Connection';
import {LotteryContext} from './LotteryContext';


const WizardInner = ({lottery}) => {
  const {account} = useWeb3React();
  const [code, setCode] = useState(null);
  const [claimed, setClaimed] = useState(null);
  const updateCode = async code => {
    setClaimed(null);
    setCode(code);
    if (code !== null) {
      setClaimed(await lottery.isReferralCodeClaimed(code));
    } else {
      setClaimed(null);
    }
  };
  useEffect(() => {
    updateCode(lottery.generateReferralCode());
    // eslint-disable-next-line
  }, [lottery]);
  const onChange = ({target}) => {
    setCode(lottery.decodeReferralCode(target.value));
    setClaimed(null);
  };
  const onBlur = ({target}) => {
    updateCode(lottery.decodeReferralCode(target.value));
  };
  const getWidgetCode = () => {
    if (code) {
      return encodeURIComponent(lottery.encodeReferralCode(code));
    } else {
      return '';
    }
  };
  return (
    <div className="mb-5">
      <h3>1. Connect your wallet</h3>
      {(account && lottery) ? (<>
        <p>
          You are currently connected as <a target="_blank" rel="noreferrer" href={`https://${process.env.NEXT_PUBLIC_ETHERSCAN_ADDRESS}/address/${account}`}>{account}</a>.
        </p>
        <h3>2. Generate and claim your code</h3>
        <Form noValidate onSubmit={async e => {
          e.preventDefault();
          await lottery.claimReferralCode(code, account);
        }}>
          <Form.Group as={Row} className="mb-3">
            <Form.Label column sm="3">Your custom code:</Form.Label>
            <Col>
              {code ? (
                <Form.Control
                    placeholder="Referral code"
                    value={lottery.encodeReferralCode(code)}
                    isInvalid={claimed === true}
                    isValid={claimed === false}
                    onChange={onChange}
                    onBlur={onBlur}/>
              ) : (
                <Form.Control
                    placeholder="Referral code"
                    onChange={onChange}
                    onBlur={onBlur}/>
              )}
              {(claimed !== true) ? null : (
                <Form.Control.Feedback type="invalid">Already claimed</Form.Control.Feedback>
              )}
            </Col>
          </Form.Group>
          <Form.Group as={Row} className="mb-3">
            <Col sm={{span: 4, offset: 3}}>
              <button type="button" className="btn btn-details mb-4" onClick={() => {
                updateCode(lottery.generateReferralCode());
              }}>
                <span className="btn-details__text">Regenerate</span>
                <span className="btn-details__shadow"></span>
              </button>
            </Col>
            <Col sm={{span: 4}}>
              <button type="submit" disabled={claimed !== false} className="btn btn-details mb-4">
                <span className="btn-details__text">Claim</span>
                <span className="btn-details__shadow"></span>
              </button>
            </Col>
          </Form.Group>
        </Form>
        <h3>3. Embed our widget in your website</h3>
        <p>Here is your custom EthernaLotto widget:</p>
        <pre>
          &lt;iframe title=&quot;EthernaLotto&quot; src=&quot;https://{process.env.NEXT_PUBLIC_SITE_NAME}/widget?code={getWidgetCode()}&quot;&gt;&lt;/iframe&gt;
        </pre>
        <p>Overview:</p>
        <iframe
            title="EthernaLotto"
            style={{
              border: '0.5em solid gray',
              borderRadius: '0.5em',
            }}
            src={`https://${process.env.NEXT_PUBLIC_SITE_NAME}/widget?code=${getWidgetCode()}`}
            />
        <p>
          You can embed the above HTML in any website. Your wallet <code>{account}</code> will get
          10% of the revenue generated by any tickets sold via this widget.
        </p>
        <p>Good luck!</p>
      </>) : (<ConnectButton/>)}
    </div>
  );
};

export const ReferralWizard = () => (
  <LotteryContext.Consumer>{lottery => lottery && (
    <WizardInner lottery={lottery}/>
  )}</LotteryContext.Consumer>
);
